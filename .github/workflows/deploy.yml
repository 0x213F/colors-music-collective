name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Install LilyPond and jq
      run: |
        sudo apt-get update
        sudo apt-get install -y lilypond jq
        
    - name: Convert LilyPond files to PDF
      run: |
        mkdir -p _site/pdfs
        for song_dir in songs/*/; do
          if [ -d "$song_dir" ]; then
            song_name=$(basename "$song_dir")
            for ly_file in "$song_dir"*.ly; do
              if [ -f "$ly_file" ]; then
                echo "Converting $ly_file to PDF..."
                lilypond --output=_site/pdfs/ "$ly_file"
              fi
            done
          fi
        done
        
    - name: Generate HTML
      run: |
        mkdir -p _site
        cat > _site/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <title>Colors Music Collective</title>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <style>
                body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }
                h1 { color: #333; }
                .song-list { list-style: none; padding: 0; }
                .song-item { margin: 10px 0; padding: 10px; border: 1px solid #ddd; border-radius: 5px; }
                .song-name { font-size: 18px; font-weight: bold; cursor: pointer; padding: 10px; background: #f5f5f5; }
                .song-name:hover { background: #e5e5e5; }
                .song-details { display: none; padding: 15px; background: white; }
                .song-description { margin-bottom: 15px; line-height: 1.6; }
                .pdf-button { 
                    background: #007cba; 
                    color: white; 
                    padding: 8px 16px; 
                    text-decoration: none; 
                    border-radius: 4px; 
                    display: inline-block;
                }
                .pdf-button:hover { background: #005a87; }
                .add-song { 
                    font-size: 18px; 
                    font-weight: bold; 
                    cursor: pointer; 
                    padding: 10px; 
                    background: #f5f5f5; 
                    text-align: center; 
                    text-decoration: none; 
                    color: #333; 
                    display: block;
                }
                .add-song:hover { background: #e5e5e5; }
            </style>
            <script>
                function toggleSong(songId) {
                    const details = document.getElementById(songId + '-details');
                    if (details.style.display === 'none' || details.style.display === '') {
                        details.style.display = 'block';
                    } else {
                        details.style.display = 'none';
                    }
                }
            </script>
        </head>
        <body>
            <h1>Colors Music Collective</h1>
            <ul class="song-list">
        EOF
        
        # Generate song list from directories
        for song_dir in songs/*/; do
          if [ -d "$song_dir" ]; then
            song_name=$(basename "$song_dir")
            
            # Read info from JSON file
            title="$song_name"
            description=""
            if [ -f "$song_dir/info.json" ]; then
              # Extract title and description from JSON
              title=$(jq -r '.title // "'"$song_name"'"' "$song_dir/info.json")
              description=$(jq -r '.description // ""' "$song_dir/info.json")
            fi
            
            echo "                <li class=\"song-item\">" >> _site/index.html
            echo "                    <div class=\"song-name\" onclick=\"toggleSong('$song_name')\">$title</div>" >> _site/index.html
            echo "                    <div id=\"$song_name-details\" class=\"song-details\">" >> _site/index.html
            
            # Add description if available
            if [ -n "$description" ]; then
              echo "                        <div class=\"song-description\">" >> _site/index.html
              echo "$description" | sed 's/&/\&amp;/g; s/</\&lt;/g; s/>/\&gt;/g; s/"/\&quot;/g' >> _site/index.html
              echo "                        </div>" >> _site/index.html
            fi
            
            # Add PDF button if ly file exists
            if [ -f "$song_dir$song_name.ly" ]; then
              echo "                        <a href=\"pdfs/$song_name.pdf\" class=\"pdf-button\" target=\"_blank\">Open PDF</a>" >> _site/index.html
            fi
            
            echo "                    </div>" >> _site/index.html
            echo "                </li>" >> _site/index.html
          fi
        done
        
        cat >> _site/index.html << 'EOF'
            </ul>
            <div class="song-item">
                <a href="https://github.com/0x213F/colors-music-collective" class="add-song" target="_blank">+ Add Song</a>
            </div>
        </body>
        </html>
        EOF
        
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4